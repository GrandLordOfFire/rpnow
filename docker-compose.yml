version: '3.2'

services:
  caddy:
    image: abiosoft/caddy
    restart: "no"
    volumes:
      - caddy_data:/root/.caddy
    ports:
      - mode: host # mode:host required to get correct client ip from docker swarm
        protocol: tcp
        published: "${RPNOW_PORT-80}"
        target: 80
      - mode: host # mode:host required to get correct client ip from docker swarm
        protocol: tcp
        published: "${RPNOW_SSL_PORT-443}"
        target: 443
    environment:
      CADDYFILE_CONTENTS: '
        \n  http://localhost:2015, https://
        \n
        \n  log stdout
        \n
        \n  realip {
        \n    from 10.0.0.0/8
        \n    from 172.16.0.0/12
        \n  }
        \n
        \n  proxy / rpnow:3000 {
        \n    websocket
        \n    transparent
        \n  }
        \n
        \n  tls {
        \n    ca https://acme-v02.api.letsencrypt.org/directory
        \n    max_certs 10
        \n    alpn http/1.1
        \n  }'
    entrypoint: ["/bin/sh", "-c"]
    command: ["echo -e $$CADDYFILE_CONTENTS | caddy --conf stdin --agree=true"]
    networks:
      - front-layer
    deploy:
      placement:
        constraints: [node.role == manager]

  rpnow:
    image: rpnow/rpnow
    build: .
    restart: on-failure
    depends_on:
      - db
      - redis
    environment:
      RPNOW_DB_HOST: 'db'
      RPNOW_REDIS_HOST: 'redis'
      RPNOW_TRUST_PROXY: 'true'
    networks:
      - front-layer
      - back-layer
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
      resources:
        limits:
          memory: 400M

  db:
    image: mongo:3.6
    restart: on-failure
    volumes:
      - db_data:/data/db
    networks:
      - back-layer

  redis:
    image: redis:4-32bit # 32bit is for decreased memory usage, see docs
    restart: on-failure
    networks:
      - back-layer

networks:
  front-layer:
  back-layer:

volumes:
  caddy_data:
  db_data:
