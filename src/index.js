#!/usr/bin/env node

const GreenlockExpress = require('greenlock-express')
const config = require('./services/config');
const checkIfAlreadyRunning = require('./services/is-already-running');
const bannerMessage = require('./services/cli-banner-message');
const httpsPrompts = require('./services/https-prompts');
const app = require('./app');

function showError(str) {
    console.error(str);

    if (process.pkg) {
        // In desktop app mode, keep the process alive
        console.error('(Press Ctrl+C to exit.)')
        setInterval(() => {}, 10000); 
    } else {
        // In command line mode, exit with error code
        process.exit(1);
    }
}

(async function main() {
    if (await checkIfAlreadyRunning()) {
        return showError('ERROR: RPNow is already running');
    }

    const { useHttps, leTos, email, domain } = await httpsPrompts();

    if (useHttps) {
        if (!leTos) return showError("ERROR: You must accept the Let's Encrypt TOS to use this service.");

        const httpsServer = GreenlockExpress.create({
            app,

            email,
            agreeTos: leTos,
            approvedDomains: [domain],
            configDir: config.dataDir,

            communityMember: false,
            securityUpdates: false,
            telemetry: true,
        });
        httpsServer.listen(80, 443, (err) => {
            if (err) return showError(`ERROR: RPNow failed to start: ${err}`);

            // delay logging this until messages generated by vue-pronto are done
            setTimeout(() => console.log(bannerMessage), 2000);
        });
    } else {
        app.listen(config.port, (err) => {
            if (err) return showError(`ERROR: RPNow failed to start: ${err}`);

            // delay logging this until messages generated by vue-pronto are done
            setTimeout(() => console.log(bannerMessage), 2000);
        });
    }
}());
